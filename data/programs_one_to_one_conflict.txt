Concat(ConstStr("Hack "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), 1))), Concat(ConstStr("."), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -2), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -1))), ConstStr(". - Security Through Penetration Testing With Cdrom")))))==>ADVANCES IN COMPUTERS V56->Hack I.T. - Security Through Penetration Testing With Cdrom
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2)))), ConstStr("DVANCES IN COMPUTERS V56"))==>Hack I.T. - Security Through Penetration Testing With Cdrom->ADVANCES IN COMPUTERS V56
Concat(ConstStr("\"Klevinsky, T. J."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Zelkowitz, Marvin"->"Klevinsky, T. J."
Concat(ConstStr("\"Zelkowitz, Marvin"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Klevinsky, T. J."->"Zelkowitz, Marvin"
Concat(ConstStr("Communication Networking an Analytical "), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -6)))))==>Wi-Foo: The Secrets of Wireless Hacking->Communication Networking an Analytical A
Concat(ConstStr("W"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, 6), RelativePosition(x, 7))), ConstStr("-Foo: The Secrets of Wireless Hacking")))==>Communication Networking an Analytical A->Wi-Foo: The Secrets of Wireless Hacking
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), Concat(ConstStr("umar, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("nurag\"")))))==>"Andrew Vladimirov, Konstantin V. Gavrilenko, Andrei A. Mikhailovsky"->"Kumar, Anurag"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ndrew Vladimirov, Konstantin V. Gavrilenko, Andrei A. Mikhailovsky\"")))==>"Kumar, Anurag"->"Andrew Vladimirov, Konstantin V. Gavrilenko, Andrei A. Mikhailovsky"
Concat(ConstStr("JIM BLINNS CORN"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Colon"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Colon"), 1)))))==>"Essential XML Quick Reference: A Programmer's Reference to XML, Xpath, XSLT, XML Schema, Soap, and More"->JIM BLINNS CORNER
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1))), ConstStr("ssential XML Quick Reference: A Programmer's Reference to XML, Xpath, XSLT, XML Schema, Soap, and More\"")))==>JIM BLINNS CORNER->"Essential XML Quick Reference: A Programmer's Reference to XML, Xpath, XSLT, XML Schema, Soap, and More"
Concat(ConstStr("\"Blinn, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Left Parenthesis", "ε"), -1), RegexPositionRelative(x, RegexPair("Left Parenthesis◦ALL CAPS", "ε"), -1))), ConstStr("im\"")))==>"Skonnard, Aaron (Author) Gudgin, Martin (Joint Author)"->"Blinn, Jim"
Concat(ConstStr("\"Skonnard, Aaron (Author) Gudgin, Martin ("), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("oint Author)\"")))==>"Blinn, Jim"->"Skonnard, Aaron (Author) Gudgin, Martin (Joint Author)"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("QL Queries for Mere Mortals"))==>Windows XP Networking (The Addison-Wesley Microsoft Technology Series)->SQL Queries for Mere Mortals
Concat(ConstStr("Windows XP Networking (The Addison-Wesley "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("icrosoft Technology "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), 1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, 6), RegexPositionRelative(x, RegexPair("Lowercase word", "ε"), 1))), ConstStr(")"))))))==>SQL Queries for Mere Mortals->Windows XP Networking (The Addison-Wesley Microsoft Technology Series)
Concat(ConstStr("\"Hernandez, Michael J./ Viescas, John L./"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Cohen, Kackie; Daniels, Andrew"->"Hernandez, Michael J./ Viescas, John L./"
Concat(ConstStr("\"Cohen, Kackie; Daniels, Andrew"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Hernandez, Michael J./ Viescas, John L./"->"Cohen, Kackie; Daniels, Andrew"
Concat(ConstStr("Data Mining: Introductory and Advanced "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), 1))), ConstStr("opics")))==>Honeypots: Tracking Hackers->Data Mining: Introductory and Advanced Topics
Concat(ConstStr("Honeypots: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("racking Hackers")))==>Data Mining: Introductory and Advanced Topics->Honeypots: Tracking Hackers
Concat(ConstStr("\"Dunham, Margaret H."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Spitzner, Lance"->"Dunham, Margaret H."
Concat(ConstStr("\"Spitzner, Lance"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Dunham, Margaret H."->"Spitzner, Lance"
Concat(ConstStr("DISTRIBUTED ALGORITHM"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))))==>Smart Phone And Next Generation Mobile Computing (morgan Kaufmann Series In Networking (paperback))->DISTRIBUTED ALGORITHMS
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), -1))), ConstStr("mart Phone And Next Generation Mobile Computing (morgan Kaufmann Series In Networking (paperback))"))==>DISTRIBUTED ALGORITHMS->Smart Phone And Next Generation Mobile Computing (morgan Kaufmann Series In Networking (paperback))
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), Concat(ConstStr("ynch, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ancy\"")))))==>"Pei Zheng, Lionel Ni"->"Lynch, Nancy"
Concat(ConstStr("\"Pei Zheng, Lionel Ni"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Lynch, Nancy"->"Pei Zheng, Lionel Ni"
Concat(ConstStr("Unix"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Colon", "ε"), 1))), ConstStr(" The Textbook")))==>"Databasics : Practical Concepts, Principles And Methods For Database Management"->Unix: The Textbook
Concat(ConstStr("\"Databasics "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Colon"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1))), ConstStr(" Practical Concepts, Principles And Methods For Database Management\"")))==>Unix: The Textbook->"Databasics : Practical Concepts, Principles And Methods For Database Management"
Concat(ConstStr("\"Sarwar, Syed Mansoor, and Koretsky, Robert, and Sarwar, Syed Aqeel"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Pascal, Fabian"->"Sarwar, Syed Mansoor, and Koretsky, Robert, and Sarwar, Syed Aqeel"
Concat(ConstStr("\"Pascal, Fabian"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Sarwar, Syed Mansoor, and Koretsky, Robert, and Sarwar, Syed Aqeel"->"Pascal, Fabian"
Concat(ConstStr("Using UML: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("oftware Engineering with Objects and "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("omponents")))))==>Computer Security->Using UML: Software Engineering with Objects and Components
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("omputer "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("ecurity"))))==>Using UML: Software Engineering with Objects and Components->Computer Security
Concat(ConstStr("\"Perdita Stevens , Edinburgh University"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Carroll, John M."->"Perdita Stevens , Edinburgh University"
Concat(ConstStr("\"Carroll, John M."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Perdita Stevens , Edinburgh University"->"Carroll, John M."
Concat(ConstStr("High-"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1))), ConstStr("ech Crimes Revealed")))==>NET Internationalization->High-Tech Crimes Revealed
Concat(ConstStr("NE"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Hyphen", "ε"), 1), RegexPositionRelative(x, RegexPair("Hyphen◦ALL CAPS", "ε"), 1))), ConstStr(" Internationalization")))==>High-Tech Crimes Revealed->NET Internationalization
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Hyphen"), 1))), ConstStr("teven Branigan"))==>Guy Smith-Ferrier->Steven Branigan
Concat(ConstStr("Guy "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("mith-Ferrier")))==>Steven Branigan->Guy Smith-Ferrier
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr(": An Introduction to Problem Solving and Programming"))==>Java Web Services Architecture->Java: An Introduction to Problem Solving and Programming
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr(" Web Services Architecture"))==>Java: An Introduction to Problem Solving and Programming->Java Web Services Architecture
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 4), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))), ConstStr("avitch"))==>James McGovern->Savitch
Concat(ConstStr("James M"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -3), RelativePosition(x, -2))), ConstStr("Govern")))==>Savitch->James McGovern
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 30), RelativePosition(x, 31)))), ConstStr("atabase Principles Programming Performance"))==>XQuery from the Experts: A Guide to the W3C XML Query Language->Database Principles Programming Performance
Concat(ConstStr("XQuery from the Experts: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2)))), ConstStr(" Guide to the W3C XML Query Language")))==>Database Principles Programming Performance->XQuery from the Experts: A Guide to the W3C XML Query Language
Concat(ConstStr("\"O'Neil, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("atrick &amp; O'Neil, Elizabeth\"")))==>"Howard Katz, Don Chamberlin, Denise Draper, Mary Fernandez, Michael Kay, Jonathan Robie, Michael Rys, Jerome Simeon, Jim Tivy, Philip Wadler"->"O'Neil, Patrick &amp; O'Neil, Elizabeth"
Concat(ConstStr("\"Howard Katz, Don Chamberlin, Denise Draper, Mary Fernandez, Michael Kay, Jonathan Robie, Michael Rys, Jerome Simeon, Jim Tivy, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), 1))), ConstStr("hilip Wadler\"")))==>"O'Neil, Patrick &amp; O'Neil, Elizabeth"->"Howard Katz, Don Chamberlin, Denise Draper, Mary Fernandez, Michael Kay, Jonathan Robie, Michael Rys, Jerome Simeon, Jim Tivy, Philip Wadler"
Concat(ConstStr("Know Your Enemy: Learning about "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ecurity Threats (2nd Edition)")))==>Quality Web Systems->Know Your Enemy: Learning about Security Threats (2nd Edition)
Concat(ConstStr("Quality Web "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "Lowercase word◦WhiteSpace◦Alphanumeric"), -1))), ConstStr("ystems")))==>Know Your Enemy: Learning about Security Threats (2nd Edition)->Quality Web Systems
Concat(ConstStr("\"The, Honeynet Project"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Dustin, Elfriede/ Rashka, Jeff/ McDiarmi"->"The, Honeynet Project"
Concat(ConstStr("\"Dustin, Elfriede/ Rashka, Jeff/ McDiarmi"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"The, Honeynet Project"->"Dustin, Elfriede/ Rashka, Jeff/ McDiarmi"
Concat(ConstStr("Windows Forensics and Incident "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1))), ConstStr("ecovery")))==>ARTIFICIAL INTELLIGENCE->Windows Forensics and Incident Recovery
Concat(ConstStr("ARTIFICIAL INTELLIGENC"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -7)))))==>Windows Forensics and Incident Recovery->ARTIFICIAL INTELLIGENCE
Concat(ConstStr("Harlan"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Carvey")))==>"Nilsson, Nils J."->Harlan Carvey
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 5), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))), ConstStr("ilsson, Nils J.\"")))==>Harlan Carvey->"Nilsson, Nils J."
Concat(ConstStr("TCP/IP SOCKETS IN JAVA PRACTICAL GUIDE FOR PROGRAMMER"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Camel Case◦WhiteSpace◦Camel Case"), -1), RegexPositionRelative(x, RegexPair("Camel Case◦WhiteSpace◦ALL CAPS", "ε"), 1))))==>CMM in Practice: Processes for Executing Software Projects at Infosys->TCP/IP SOCKETS IN JAVA PRACTICAL GUIDE FOR PROGRAMMERS
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Forward Slash"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -3), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -1))), ConstStr(" in Practice: Processes for Executing Software Projects at Infosys")))==>TCP/IP SOCKETS IN JAVA PRACTICAL GUIDE FOR PROGRAMMERS->CMM in Practice: Processes for Executing Software Projects at Infosys
Concat(ConstStr("\"CALVERT, KENNETH L. DONAHOO, MICHAEL "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(".\"")))==>"Jalote, Pankaj"->"CALVERT, KENNETH L. DONAHOO, MICHAEL J."
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("alote, Pankaj\"")))==>"CALVERT, KENNETH L. DONAHOO, MICHAEL J."->"Jalote, Pankaj"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("nside the C++ Object Model"))==>Windows Internals->Inside the C++ Object Model
Concat(ConstStr("Windows "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("nternals")))==>Inside the C++ Object Model->Windows Internals
Concat(ConstStr("\"Lippman, Stanley B."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Pietrek, Matt"->"Lippman, Stanley B."
Concat(ConstStr("\"Pietrek, Matt"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Lippman, Stanley B."->"Pietrek, Matt"
Concat(ConstStr("Programming "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace◦ALL CAPS", "ε"), 1))), Concat(ConstStr("indows "), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Colon"), 1), RegexPositionRelative(x, RegexPair("ε", "Colon"), 1))))))==>Inside Internet Security: What Hackers Don't Want You to Know->Programming Windows Security
Concat(ConstStr("Inside Internet "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1))), ConstStr(": What Hackers Don't Want You to Know")))==>Programming Windows Security->Inside Internet Security: What Hackers Don't Want You to Know
Concat(ConstStr("Keith"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Brown")))==>"Crume, Jeff"->Keith Brown
Concat(ConstStr("\"Crume,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Jeff\"")))==>Keith Brown->"Crume, Jeff"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("oftware Engineering Processes: With the UPEDU"))==>Secure Coding in C And C++->Software Engineering Processes: With the UPEDU
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ecure Coding in C And C++"))==>Software Engineering Processes: With the UPEDU->Secure Coding in C And C++
Concat(ConstStr("\"Pierre N. "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1))), ConstStr("obillard, Philippe Kruchten\"")))==>"Seacord, Robert C."->"Pierre N. Robillard, Philippe Kruchten"
Concat(ConstStr("\"Seacord, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Dot◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), 1))), ConstStr("obert C.\"")))==>"Pierre N. Robillard, Philippe Kruchten"->"Seacord, Robert C."
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("Left Parenthesis◦Alphanumeric", "ε"), 1))), ConstStr("ETWORK SIMULATION EXPERIMENTS"))==>Troubleshooting Analog Circuits (EDN Series for Design Engineers)->NETWORK SIMULATION EXPERIMENTS
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1))), ConstStr("roubleshooting Analog Circuits (EDN Series for Design Engineers)"))==>NETWORK SIMULATION EXPERIMENTS->Troubleshooting Analog Circuits (EDN Series for Design Engineers)
Concat(ConstStr("\"Aboelela, Emad"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Pease, Robert"->"Aboelela, Emad"
Concat(ConstStr("\"Pease, Robert"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Aboelela, Emad"->"Pease, Robert"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -12), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Words/dots/hyphens◦WhiteSpace"), -1)))), ConstStr("AP Directories Explained: An Introduction and Analysis"))==>Internet Effectively: A Beginner's Guide To The World Wide Web->LDAP Directories Explained: An Introduction and Analysis
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦',' or 'and'"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦',' or 'and'"), 1))), ConstStr("nternet Effectively: A Beginner's Guide To The World Wide Web"))==>LDAP Directories Explained: An Introduction and Analysis->Internet Effectively: A Beginner's Guide To The World Wide Web
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("rkills, Brian\"")))==>Adams->"Arkills, Brian"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("dams"))==>"Arkills, Brian"->Adams
Concat(ConstStr("\"Java("), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1))), ConstStr("M) Language Specification, The (3rd Edition) (The Java Series)\"")))==>DESIGNING ENTERPRISE APPLICATI->"Java(TM) Language Specification, The (3rd Edition) (The Java Series)"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Right Parenthesis"), 1), RelativePosition(x, -26)))), ConstStr("ESIGNING ENTERPRISE APPLICATI"))==>"Java(TM) Language Specification, The (3rd Edition) (The Java Series)"->DESIGNING ENTERPRISE APPLICATI
Concat(ConstStr("James Gosling; Bill Joy; Guy "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("teele; Gilad Bracha")))==>"Singh, Inderjeet"->James Gosling; Bill Joy; Guy Steele; Gilad Bracha
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Semicolon"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Semicolon"), -1))), ConstStr("ingh, Inderjeet\"")))==>James Gosling; Bill Joy; Guy Steele; Gilad Bracha->"Singh, Inderjeet"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case◦Upper Case", "ε"), 1))), Concat(ConstStr("n to "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), 1))), ConstStr("++"))))==>SHORT COURSE IN HTML->On to C++
Concat(ConstStr("SH"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr("RT "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("URSE IN HTML"))))))==>On to C++->SHORT COURSE IN HTML
Concat(ConstStr("Patrick Henry Winsto"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), -1)))))==>LIN->Patrick Henry Winston
Concat(ConstStr("LI"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("ε", "Line Separator"), -1)))))==>Patrick Henry Winston->LIN
Concat(ConstStr("Just Java(T"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -20), RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace◦Alphanumeric", "ε"), 1)))), ConstStr(") 2")))==>Protect Your Windows Network: From Perimeter to Data->Just Java(TM) 2
Concat(ConstStr("Protect Your Windows Network: From Perimeter to"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Data")))==>Just Java(TM) 2->Protect Your Windows Network: From Perimeter to Data
Concat(ConstStr("\"van der Linden, Peter"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Riley, Steve; Johansson, Jesper"->"van der Linden, Peter"
Concat(ConstStr("\"Riley, Steve; Johansson, Jesper"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"van der Linden, Peter"->"Riley, Steve; Johansson, Jesper"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash", "ε"), 1), RegexPositionRelative(x, RegexPair("Forward Slash◦Upper Case", "ε"), 1))), ConstStr("imply Visual Basic 2005 (2nd Edition)"))==>ORACLE DATABASE 10G PL/SQL PROGRAMMING->Simply Visual Basic 2005 (2nd Edition)
Concat(ConstStr("ORACL"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr(" DATABASE 10G PL/SQL PROGRAMMING")))==>Simply Visual Basic 2005 (2nd Edition)->ORACLE DATABASE 10G PL/SQL PROGRAMMING
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Alphanumeric◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Words/dots/hyphens◦WhiteSpace◦Upper Case", "ε"), 1))), ConstStr("arvey &amp; Paul) Deitel &amp; Associates"))==>"URMAN, SCOTT HARDMAN, RON MCLAUGHLIN, MICHAEL"->Harvey &amp; Paul) Deitel &amp; Associates
Concat(ConstStr("\"URMAN, SCOTT HARDMAN, RON MCLAUGHLIN, MICHAE"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 16), RegexPositionRelative(x, RegexPair("ε", "Right Parenthesis"), 1)))), ConstStr("\"")))==>Harvey &amp; Paul) Deitel &amp; Associates->"URMAN, SCOTT HARDMAN, RON MCLAUGHLIN, MICHAEL"
Concat(ConstStr("\"Designing the User Interface: Strategies for Effective Human-Computer Interaction, 4"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2))), ConstStr("\"")))==>Network Security. The Complete Reference.->"Designing the User Interface: Strategies for Effective Human-Computer Interaction, 4e"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -7), RegexPositionRelative(x, RegexPair("ε", "Comma"), 1)))), ConstStr("etwork Security. The Complete Reference."))==>"Designing the User Interface: Strategies for Effective Human-Computer Interaction, 4e"->Network Security. The Complete Reference.
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Alphanumeric◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric◦WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("en Shneiderman , University of Maryland Catherine Plaisant ,\"")))==>"Rhodos-Quisey, Mark Bragg, Roberta Strassberg, Keith"->"Ben Shneiderman , University of Maryland Catherine Plaisant ,"
Concat(ConstStr("\"Rhodos-Quisey, Mark Bragg, Roberta Strassberg, Keith"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Ben Shneiderman , University of Maryland Catherine Plaisant ,"->"Rhodos-Quisey, Mark Bragg, Roberta Strassberg, Keith"
Concat(ConstStr("How To Break Web Software: Functional and Security Testing of Web Applications and Web Services With "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr("drom")))==>C++ Primer Answer Book->How To Break Web Software: Functional and Security Testing of Web Applications and Web Services With Cdrom
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("++ Primer Answer Book"))==>How To Break Web Software: Functional and Security Testing of Web Applications and Web Services With Cdrom->C++ Primer Answer Book
Concat(ConstStr("\"Andrews, Mike"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Clovis Tondo, Bruce P. Leung, Bruce P. Leung"->"Andrews, Mike"
Concat(ConstStr("\"Clovis Tondo, Bruce P. Leung, Bruce P. Leung"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Andrews, Mike"->"Clovis Tondo, Bruce P. Leung, Bruce P. Leung"
Concat(ConstStr("Implementing Homeland "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1))), Concat(ConstStr(" for Enterprise I"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Camel Case◦WhiteSpace", "ε"), 3), RegexPositionRelative(x, RegexPair("Lowercase word◦WhiteSpace◦ALL CAPS", "ε"), 3))))))==>Securing Storage : A Practical Guide To San And Nas Security->Implementing Homeland Security for Enterprise IT
Concat(ConstStr("Securing Storage : A Practical Guide To San And Nas "), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Lowercase word"), 1))))==>Implementing Homeland Security for Enterprise IT->Securing Storage : A Practical Guide To San And Nas Security
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -8), RelativePosition(x, -7)))), ConstStr("ichael Erbschloe"))==>"Dwivedi, Himanshu"->Michael Erbschloe
Concat(ConstStr("\"Dwivedi,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Himanshu\"")))==>Michael Erbschloe->"Dwivedi, Himanshu"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Dot◦Camel Case◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 5))), ConstStr("ode Quality"))==>Building Solutions With The Microsoft.Net Compact Framework : Architecture And Best Practices For Mobile Development->Code Quality
Concat(ConstStr("Building Solutions With The Microsoft.Net "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ompact Framework : Architecture And Best Practices For Mobile Development")))==>Code Quality->Building Solutions With The Microsoft.Net Compact Framework : Architecture And Best Practices For Mobile Development
Concat(ConstStr("\"Spinellis, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("iomidis\"")))==>"Fox, Dan"->"Spinellis, Diomidis"
Concat(ConstStr("\"Fox, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("an\"")))==>"Spinellis, Diomidis"->"Fox, Dan"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), -1))), Concat(ConstStr("oftware "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Alphanumeric", "ε"), 1))), ConstStr("ngineering"))))==>UNDERSTANDING THE NEW SQL->Software Engineering
Concat(ConstStr("UNDERSTANDING THE NEW "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("QL")))==>Software Engineering->UNDERSTANDING THE NEW SQL
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case◦Upper Case", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1)))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 5), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -4))), ConstStr("ommerville")))))==>"MELTON, JIMSIMON, ALAN R."->Ian Sommerville
Concat(ConstStr("\"MELTON, J"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr("M"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("MON, ALAN R.\""))))))==>Ian Sommerville->"MELTON, JIMSIMON, ALAN R."
Concat(ConstStr("Principles of "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), ConstStr("ransaction Processing")))==>"Data Quality, The Field Guide"->Principles of Transaction Processing
Concat(ConstStr("\"Data Quality, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("he Field Guide\"")))==>Principles of Transaction Processing->"Data Quality, The Field Guide"
Concat(ConstStr("\"Philip A. "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ernstein, Eric Newcomer\"")))==>"By (author) Redman, Thomas"->"Philip A. Bernstein, Eric Newcomer"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Dot◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), 1))), ConstStr("y (author) Redman, Thomas\"")))==>"Philip A. Bernstein, Eric Newcomer"->"By (author) Redman, Thomas"
Concat(ConstStr("Intro to UNIX &amp; Linux (w/2 C"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1)))), ConstStr(")"))))==>A First Look at Microsoft SQL Server 2005 for Developers->Intro to UNIX &amp; Linux (w/2 CDs)
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Ampersand", "ε"), 1), RelativePosition(x, 16)))), ConstStr(" First Look at Microsoft SQL Server 2005 for Developers"))==>Intro to UNIX &amp; Linux (w/2 CDs)->A First Look at Microsoft SQL Server 2005 for Developers
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 12), RelativePosition(x, 13)))), ConstStr("uster"))==>"Bob Beauchemin, Niels Berglund, Dan Sullivan"->Muster
Concat(ConstStr("\"Bob Beauchemin, Niels Berglund, Dan "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 2), RelativePosition(x, 3)))), ConstStr("ullivan\"")))==>Muster->"Bob Beauchemin, Niels Berglund, Dan Sullivan"
Concat(ConstStr("Pointers on"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("C")))==>Software Design->Pointers on C
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 7), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))), ConstStr("oftware Design"))==>Pointers on C->Software Design
Concat(ConstStr("\"Reek, Kenneth A."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Budgen, David"->"Reek, Kenneth A."
Concat(ConstStr("\"Budgen, David"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Reek, Kenneth A."->"Budgen, David"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), -1))), ConstStr("ams Teach Yourself Microsoft Visual Basic .NET 2003 in 21 Days, 2/e\"")))==>DATA MODELING ESSENTIALS->"Sams Teach Yourself Microsoft Visual Basic .NET 2003 in 21 Days, 2/e"
Concat(ConstStr("DATA MODELING ESSENTIAL"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))))==>"Sams Teach Yourself Microsoft Visual Basic .NET 2003 in 21 Days, 2/e"->DATA MODELING ESSENTIALS
Concat(ConstStr("Holzner "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("teve")))==>"Simsion,Graeme; Witt,Graham"->Holzner Steve
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("imsion,Graeme; Witt,Graham\"")))==>Holzner Steve->"Simsion,Graeme; Witt,Graham"
Concat(ConstStr("Web Development and Design Foundations With XHTM"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -14), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1)))))==>The Art and Science of Digital Compositing->Web Development and Design Foundations With XHTML
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1))), ConstStr("he Art and Science of Digital Compositing"))==>Web Development and Design Foundations With XHTML->The Art and Science of Digital Compositing
Concat(ConstStr("\"Felke-Morris, Terry"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"By (author) Brinkmann, Ron"->"Felke-Morris, Terry"
Concat(ConstStr("\"By (author) Brinkmann, Ron"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Felke-Morris, Terry"->"By (author) Brinkmann, Ron"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("xcel by Example: A Microsoft Excel Cookbook for Electronics Engineers, pb, 2004\"")))==>Computer Forensics: Incident Response Essn->"Excel by Example: A Microsoft Excel Cookbook for Electronics Engineers, pb, 2004"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace◦Lowercase word"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace◦Lowercase word"), -1))), Concat(ConstStr("omputer Forensics: Incident Response "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ssn"))))==>"Excel by Example: A Microsoft Excel Cookbook for Electronics Engineers, pb, 2004"->Computer Forensics: Incident Response Essn
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("agan, Aubrey\"")))==>Kruse Warren->"Kagan, Aubrey"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ruse Warren"))==>"Kagan, Aubrey"->Kruse Warren
Concat(ConstStr("MCSE/MCSA Windows Server 2003 Environment Study Guide ("), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("xam 70-290)")))==>Exploiting Software->MCSE/MCSA Windows Server 2003 Environment Study Guide (Exam 70-290)
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("xploiting "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Forward Slash"), 1))), ConstStr("oftware"))))==>MCSE/MCSA Windows Server 2003 Environment Study Guide (Exam 70-290)->Exploiting Software
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -4)))), ConstStr("nil Desai"))==>"Hoglund, Greg/ McGraw, Gary"->Anil Desai
Concat(ConstStr("\"Hoglund, Greg/ McGraw,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Gary\"")))==>Anil Desai->"Hoglund, Greg/ McGraw, Gary"
Concat(ConstStr("Joe Celko's SQL Puzzles "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), ConstStr(" Answers")))==>MFC Programming - Obstetrics and Gynecology->Joe Celko's SQL Puzzles and Answers
Concat(ConstStr("MF"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Single Quote"), 1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ALL CAPS◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦',' or 'and'"), 1))), Concat(ConstStr("rogramming - Obstetrics "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), ConstStr(" Gynecology")))))))==>Joe Celko's SQL Puzzles and Answers->MFC Programming - Obstetrics and Gynecology
Concat(ConstStr("\"Celko, Joe (Author) Celko (Author)"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Feuer, Alan,"->"Celko, Joe (Author) Celko (Author)"
Concat(ConstStr("\"Feuer, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("lan,\"")))==>"Celko, Joe (Author) Celko (Author)"->"Feuer, Alan,"
Concat(ConstStr("Programming "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("anguages : Concepts and Constructs 2nd edition")))==>The Lotus Notes Idea Book->Programming Languages : Concepts and Constructs 2nd edition
Concat(ConstStr("The "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("otus Notes Idea Book")))==>Programming Languages : Concepts and Constructs 2nd edition->The Lotus Notes Idea Book
Concat(ConstStr("\"Sethi, Ravi; Stone, Tom (editor)"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Kovel, Jeff; Quirk, Kent; Gabin, Jay"->"Sethi, Ravi; Stone, Tom (editor)"
Concat(ConstStr("\"Kovel, Jeff; Quirk, Kent; Gabin, Jay"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Sethi, Ravi; Stone, Tom (editor)"->"Kovel, Jeff; Quirk, Kent; Gabin, Jay"
Concat(ConstStr("\"Databases, Types and the Relational Model"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Business Programming Logic, by Singlemann, 4th Edition"->"Databases, Types and the Relational Model"
Concat(ConstStr("\"Business Programming Logic, by Singlemann, 4th Edition"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Databases, Types and the Relational Model"->"Business Programming Logic, by Singlemann, 4th Edition"
Concat(ConstStr("\"C. "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr(". Date, Hugh Darwen\"")))==>"Singelmann, Jay/ Longhurst, Jean"->"C. J. Date, Hugh Darwen"
Concat(ConstStr("\"Singelmann, Jay/ Longhurst, Jean"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"C. J. Date, Hugh Darwen"->"Singelmann, Jay/ Longhurst, Jean"
Concat(ConstStr("Small Java How T"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2))), ConstStr(" Program")))==>Computer Architecture: A Quantitative Approach->Small Java How To Program
Concat(ConstStr("Computer Architecture: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1), RelativePosition(x, 8)))), ConstStr(" Quantitative Approach")))==>Small Java How To Program->Computer Architecture: A Quantitative Approach
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Camel Case"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1))), Concat(ConstStr("eitel, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("arvey M.\"")))))==>"Hennessey, John; Patterson, David A."->"Deitel, Harvey M."
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1))), Concat(ConstStr("ennessey, John; Patterson, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("avid A.\"")))))==>"Deitel, Harvey M."->"Hennessey, John; Patterson, David A."
Concat(ConstStr("Modeling Xml Applications With Uml Practical E-Business "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2)))), ConstStr("pplications")))==>Java For Students->Modeling Xml Applications With Uml Practical E-Business Applications
Concat(ConstStr("Java For "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("ε", "Line Separator"), -1)))), ConstStr("tudents")))==>Modeling Xml Applications With Uml Practical E-Business Applications->Java For Students
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("avid Carlson"))==>"Douglas Bell , Sheffield Hallam University Mike Parr , Sheffie"->David Carlson
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ouglas Bell , Sheffield Hallam University Mike Parr , Sheffie\"")))==>David Carlson->"Douglas Bell , Sheffield Hallam University Mike Parr , Sheffie"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -4)))), ConstStr("nformation Appliances &amp; Beyond"))==>Painting the Digital River->Information Appliances &amp; Beyond
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -10), RegexPositionRelative(x, RegexPair("ε", "Semicolon"), 1)))), ConstStr("ainting the Digital River"))==>Information Appliances &amp; Beyond->Painting the Digital River
Concat(ConstStr("\"Bergman,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Eric\"")))==>James Faure Walker->"Bergman, Eric"
Concat(ConstStr("James"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Faure Walker")))==>"Bergman, Eric"->James Faure Walker
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 21), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Words/dots/hyphens◦WhiteSpace"), -1)))), ConstStr("et Internationalization: the Developer's Guide To Building Global Windows and Web Applications (Microsoft .net Development Series)"))==>Code Quality: The Open Source Perspective->Net Internationalization: the Developer's Guide To Building Global Windows and Web Applications (Microsoft .net Development Series)
Concat(ConstStr("Code Quality: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToSimpleTitleCase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1)))), Concat(ConstStr(" Open "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ource Perspective")))))==>Net Internationalization: the Developer's Guide To Building Global Windows and Web Applications (Microsoft .net Development Series)->Code Quality: The Open Source Perspective
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("mith-ferrier, Guy\"")))==>"Spinellis, Diomidis"->"Smith-ferrier, Guy"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("pinellis, Diomidis\"")))==>"Smith-ferrier, Guy"->"Spinellis, Diomidis"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1), RelativePosition(x, 11)))), ConstStr("xpanding a Digital Content Management System: for the Growing Digital Media Enterprise (NAB Executive Technology Briefings)"))==>Internet Security - A Jumpstart for Systems Administrators and IT Managers->Expanding a Digital Content Management System: for the Growing Digital Media Enterprise (NAB Executive Technology Briefings)
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1), RelativePosition(x, 14)))), ConstStr("nternet Security - A Jumpstart for Systems Administrators and IT Managers"))==>Expanding a Digital Content Management System: for the Growing Digital Media Enterprise (NAB Executive Technology Briefings)->Internet Security - A Jumpstart for Systems Administrators and IT Managers
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -3), RegexPositionRelative(x, RegexPair("ε", "Double Quote"), -1)))), ConstStr("agan H. Arthur"))==>"Speed,Tim"->Magan H. Arthur
Concat(ConstStr("\"Speed,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -5), RelativePosition(x, -4)))), ConstStr("im\"")))==>Magan H. Arthur->"Speed,Tim"
Concat(ConstStr("Data Warehousing : Using the Wal-Mart Model (The Morgan Kaufmann Series in Data Management "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ystems)")))==>Spring Into PHP 5->Data Warehousing : Using the Wal-Mart Model (The Morgan Kaufmann Series in Data Management Systems)
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("pring Into PHP 5"))==>Data Warehousing : Using the Wal-Mart Model (The Morgan Kaufmann Series in Data Management Systems)->Spring Into PHP 5
Concat(ConstStr("Paul"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Westerman")))==>"Holzner, Steven"->Paul Westerman
Concat(ConstStr("\"Holzner,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Steven\"")))==>Paul Westerman->"Holzner, Steven"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 8), RelativePosition(x, 9)))), ConstStr("arallel and Distributed Programming Using C++"))==>MEL Scripting for Maya Animators->Parallel and Distributed Programming Using C++
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -15), RelativePosition(x, -14)))), ConstStr("EL Scripting for Maya Animators"))==>Parallel and Distributed Programming Using C++->MEL Scripting for Maya Animators
Concat(ConstStr("\"Cameron Hughes , Tracey"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Hughes\"")))==>Mark R Wilkins->"Cameron Hughes , Tracey Hughes"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 3), RelativePosition(x, 4)))), ConstStr("ark R Wilkins"))==>"Cameron Hughes , Tracey Hughes"->Mark R Wilkins
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -8), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1)))), ConstStr("oftware Architecture : A Practical Guide For Software Designers"))==>Digital Visual Fortran Programmers Guide->Software Architecture : A Practical Guide For Software Designers
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("igital Visual Fortran Programmers "), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Camel Case◦WhiteSpace", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Lowercase word◦WhiteSpace◦Alphanumeric", "ε"), 2)))))==>Software Architecture : A Practical Guide For Software Designers->Digital Visual Fortran Programmers Guide
Concat(ConstStr("\"Hofmeister, Christine"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Etzel, Michael"->"Hofmeister, Christine"
Concat(ConstStr("\"Etzel, Michael"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Hofmeister, Christine"->"Etzel, Michael"
Concat(ConstStr("Practical Guide to "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Left Parenthesis"), 1))), ConstStr("esting Object-Oriented Software")))==>Understanding .NET (2nd Edition)->Practical Guide to Testing Object-Oriented Software
Concat(ConstStr("Understanding .NE"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 2))), ConstStr(" (2nd Edition)")))==>Practical Guide to Testing Object-Oriented Software->Understanding .NET (2nd Edition)
Concat(ConstStr("\"Sykes, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1))), Concat(ConstStr(" A.; McGregor, John "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr(".\"")))))==>"Chappell, David"->"Sykes, David A.; McGregor, John D."
Concat(ConstStr("\"Chappell, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Alphanumeric", "ε"), 1))), ConstStr("\"")))==>"Sykes, David A.; McGregor, John D."->"Chappell, David"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -11), RegexPositionRelative(x, RegexPair("Number", "ε"), 1))), ConstStr("D Game Engine Design: A Practical Approach to Real-Time Computer Graphics"))==>I-Series: Microsoft Office Access 2003 Complete->3D Game Engine Design: A Practical Approach to Real-Time Computer Graphics
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Hyphen◦ALL CAPS", "ε"), 1), RelativePosition(x, -21)))), ConstStr("-Series: Microsoft Office Access 2003 Complete"))==>3D Game Engine Design: A Practical Approach to Real-Time Computer Graphics->I-Series: Microsoft Office Access 2003 Complete
Concat(ConstStr("\"Eberly, David "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(".\"")))==>"Haag, Stephen; Perry, James"->"Eberly, David H."
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("aag, Stephen; Perry, James\"")))==>"Eberly, David H."->"Haag, Stephen; Perry, James"
Concat(ConstStr("Advanced "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Colon"), 1), RegexPositionRelative(x, RegexPair("ε", "Colon"), 1))), ConstStr(" Using Visual Basic.Net with Student CD")))==>Introduction to Java Programming: Fundamentals First->Advanced Programming Using Visual Basic.Net with Student CD
Concat(ConstStr("Introduction to Java "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Alphanumeric", "ε"), 1))), ConstStr(": Fundamentals First")))==>Advanced Programming Using Visual Basic.Net with Student CD->Introduction to Java Programming: Fundamentals First
Concat(ConstStr("\"Julia"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Case Bradley, Anita C Millspaugh\"")))==>Y Daniel Liang->"Julia Case Bradley, Anita C Millspaugh"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 18), RegexPositionRelative(x, RegexPair("ε", "Comma"), 1)))), ConstStr(" Daniel Liang"))==>"Julia Case Bradley, Anita C Millspaugh"->Y Daniel Liang
Concat(ConstStr("Mike Meyers' "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("ecurity+ Certification Passport (Mike Meyers' Certification Passport)")))==>File System Forensics Analysis->Mike Meyers' Security+ Certification Passport (Mike Meyers' Certification Passport)
Concat(ConstStr("File "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Single Quote◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Plus"), 1))), ConstStr("ystem Forensics Analysis")))==>Mike Meyers' Security+ Certification Passport (Mike Meyers' Certification Passport)->File System Forensics Analysis
Concat(ConstStr("Trevor"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Kay")))==>"Carrier, Brian"->Trevor Kay
Concat(ConstStr("\"Carrier,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Brian\"")))==>Trevor Kay->"Carrier, Brian"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("rtificial Intelligence: A Modern Approach"))==>"Advances in Computers, Volume 56"->Artificial Intelligence: A Modern Approach
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("dvances in Computers, Volume 56\"")))==>Artificial Intelligence: A Modern Approach->"Advances in Computers, Volume 56"
Concat(ConstStr("\"Russell, Stuart Norvig,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Peter\"")))==>Marvin V. Zelkowitz->"Russell, Stuart Norvig, Peter"
Concat(ConstStr("Marvin "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -12), RelativePosition(x, -11)))), ConstStr(". Zelkowitz")))==>"Russell, Stuart Norvig, Peter"->Marvin V. Zelkowitz
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace◦Lowercase word"), 1))), ConstStr("he Tao Of Network Security Monitoring: Beyond Intrusion Detection"))==>Fuzzy Modeling Tools for Data Mining and Knowledge Discovery->The Tao Of Network Security Monitoring: Beyond Intrusion Detection
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 2), RegexPositionRelative(x, RegexPair("WhiteSpace◦Alphanumeric", "ε"), 2)))), ConstStr("uzzy Modeling Tools for Data Mining and Knowledge Discovery"))==>The Tao Of Network Security Monitoring: Beyond Intrusion Detection->Fuzzy Modeling Tools for Data Mining and Knowledge Discovery
Concat(ConstStr("\"Bejtlich,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Richard\"")))==>Earl Cox->"Bejtlich, Richard"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 3)))), ConstStr("arl Cox"))==>"Bejtlich, Richard"->Earl Cox
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), ConstStr("roject-Based Software Engineering:An Object-Oriented Approach"))==>"Multicast Communication: Protocols, Programming, &amp; Applications"->Project-Based Software Engineering:An Object-Oriented Approach
Concat(ConstStr("\"Multicast Communication: Protocols, Programming, &amp; "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("pplications\"")))==>Project-Based Software Engineering:An Object-Oriented Approach->"Multicast Communication: Protocols, Programming, &amp; Applications"
Concat(ConstStr("\"Stiller, Evelyn/ Leblanc, Cathie"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Ralph Wittmann, Martina Zitterbart"->"Stiller, Evelyn/ Leblanc, Cathie"
Concat(ConstStr("\"Ralph Wittmann, Martina Zitterbart"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Stiller, Evelyn/ Leblanc, Cathie"->"Ralph Wittmann, Martina Zitterbart"
Concat(ConstStr("Balanced Intro to Computer "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("cience")))==>Sql Server 2005 Practical Troubleshooting : The Database Engine->Balanced Intro to Computer Science
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("ql "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("erver 2005 Practical Troubleshooting : The Database Engine"))))==>Balanced Intro to Computer Science->Sql Server 2005 Practical Troubleshooting : The Database Engine
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 6), RelativePosition(x, 7)))), ConstStr("eed"))==>"Henderson, Ken"->Reed
Concat(ConstStr("\"Hende"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1)))), ConstStr("son, Ken\"")))==>Reed->"Henderson, Ken"
Concat(ConstStr("Level "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "Lowercase word"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), Concat(ConstStr(" Detail for 3D Graphics: Level "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "Lowercase word"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), ConstStr(" Detail for 3D Graphics")))))==>WI-FOO: The Secrets of Wireless Hacking->Level of Detail for 3D Graphics: Level of Detail for 3D Graphics
Concat(ConstStr("WI-FOO: The Secrets "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Alphanumeric", "ε"), 1))), ConstStr(" Wireless Hacking")))==>Level of Detail for 3D Graphics: Level of Detail for 3D Graphics->WI-FOO: The Secrets of Wireless Hacking
Concat(ConstStr("\"Luebke,David; Reddy,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("artin\"")))==>"Gavrilenko, Konstantin; Mikhailovsky, Andrei; Mulbery, Keith"->"Luebke,David; Reddy,Martin"
Concat(ConstStr("\"Gavrilenko, Konstantin; Mikhailovsky, Andrei; Mulbery, Keith"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Luebke,David; Reddy,Martin"->"Gavrilenko, Konstantin; Mikhailovsky, Andrei; Mulbery, Keith"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 3)))), ConstStr("ata Mining: A Tutorial-Based Primer"))==>"Advanced C++ Programming Styles and Idioms [Paperback] by Coplien, James O."->Data Mining: A Tutorial-Based Primer
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace◦Alphanumeric", "ε"), 1))), ConstStr("dvanced C++ Programming Styles and Idioms [Paperback] by Coplien, James O.\"")))==>Data Mining: A Tutorial-Based Primer->"Advanced C++ Programming Styles and Idioms [Paperback] by Coplien, James O."
Concat(ConstStr("\"Roiger, Richard "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(".; Geatz, Michael\"")))==>James O. Coplien->"Roiger, Richard J.; Geatz, Michael"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Semicolon"), 1), RegexPositionRelative(x, RegexPair("ε", "Dot"), 1))), ConstStr("ames O. Coplien"))==>"Roiger, Richard J.; Geatz, Michael"->James O. Coplien
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -8), RegexPositionRelative(x, RegexPair("Lowercase word", "ε"), -1)))), ConstStr("clipse Rich Client Platform: Designing, Coding, and Packaging Java Applications\"")))==>Art of Computer Prog Fascicle 1 Volume 1 MMI->"Eclipse Rich Client Platform: Designing, Coding, and Packaging Java Applications"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("rt of Computer Prog Fascicle 1 Volume 1 MMI"))==>"Eclipse Rich Client Platform: Designing, Coding, and Packaging Java Applications"->Art of Computer Prog Fascicle 1 Volume 1 MMI
Concat(ConstStr("\"McAffer, Jeff"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Knuth, Donald E"->"McAffer, Jeff"
Concat(ConstStr("\"Knuth, Donald E"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"McAffer, Jeff"->"Knuth, Donald E"
Concat(ConstStr("Tc"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1)))), ConstStr(" and the Tk Toolkit")))==>Linux->Tcl and the Tk Toolkit
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 2), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))), ConstStr("inux"))==>Tcl and the Tk Toolkit->Linux
Concat(ConstStr("John "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -1))), ConstStr(". Ousterhout")))==>"Sarwar, Syed Mansoor/ Koretsky, Robert/"->John K. Ousterhout
Concat(ConstStr("\"Sarwar, Syed Mansoor/ "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Dot"), 1))), ConstStr("oretsky, Robert/\"")))==>John K. Ousterhout->"Sarwar, Syed Mansoor/ Koretsky, Robert/"
Concat(ConstStr("Flash and XML: A "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("eveloper's Guide")))==>"Design by Contract, by Example"->Flash and XML: A Developer's Guide
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Single Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Single Quote"), 1))), ConstStr("esign by Contract, by Example\"")))==>Flash and XML: A Developer's Guide->"Design by Contract, by Example"
Concat(ConstStr("\"Dov Jacobson, Jesse Jacobson"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Mitchell, Richard, McKim, Jim"->"Dov Jacobson, Jesse Jacobson"
Concat(ConstStr("\"Mitchell, Richard, McKim, Jim"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Dov Jacobson, Jesse Jacobson"->"Mitchell, Richard, McKim, Jim"
Concat(ConstStr("How to Break "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace◦Lowercase word"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace◦Lowercase word"), 1))), ConstStr("ecurity.")))==>Advanced Graphics Programming Using OpenGL (Morgan Kaufmann Series in Computer Graphics and Geometric Modeling)->How to Break Security.
Concat(ConstStr("Advanced Graphics Programming Using OpenGL (Morgan Kaufmann "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("eries in Computer Graphics and Geometric Modeling)")))==>How to Break Security.->Advanced Graphics Programming Using OpenGL (Morgan Kaufmann Series in Computer Graphics and Geometric Modeling)
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("hompson, Herbert Whittaker, James A.\"")))==>"Tom McReynolds, David Blythe"->"Thompson, Herbert Whittaker, James A."
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, 3), RelativePosition(x, 5))), ConstStr(" McReynolds, David Blythe\""))))==>"Thompson, Herbert Whittaker, James A."->"Tom McReynolds, David Blythe"
Concat(ConstStr("\"Understanding Your Users: A "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Lowercase word"), 1))), ConstStr(" to User Requirements, Methods, Tools and Techniques, pb, 2005\"")))==>Struts Framework Practical Guide for Java->"Understanding Your Users: A Practical Guide to User Requirements, Methods, Tools and Techniques, pb, 2005"
Concat(ConstStr("Struts Framework "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ALL CAPS◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Lowercase word"), 1))), ConstStr(" for Java")))==>"Understanding Your Users: A Practical Guide to User Requirements, Methods, Tools and Techniques, pb, 2005"->Struts Framework Practical Guide for Java
Concat(ConstStr("\"Courage, Catherine/ Baxte"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Spielman, Sue"->"Courage, Catherine/ Baxte"
Concat(ConstStr("\"Spielman, Sue"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Courage, Catherine/ Baxte"->"Spielman, Sue"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), -1))), ConstStr("ryptography in the Database : The Last Line of Defense"))==>Java Web Services Architecture with CDROM->Cryptography in the Database : The Last Line of Defense
Concat(ConstStr("Java Web Services Architecture with "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ROM"))))==>Cryptography in the Database : The Last Line of Defense->Java Web Services Architecture with CDROM
Concat(ConstStr("Kevin"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Kenan")))==>"McGovern, James (Author) Tyagi, Sameer (Author) Mathew, Sunil (Author)"->Kevin Kenan
Concat(ConstStr("\"McGovern, James (Author) Tyagi, Sameer (Author) Mathew, Sunil"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("(Author)\"")))==>Kevin Kenan->"McGovern, James (Author) Tyagi, Sameer (Author) Mathew, Sunil (Author)"
Concat(ConstStr("Writing "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 7), RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 8))), ConstStr("nix Device Drivers")))==>MANAGING &amp; TROUBLESHOOTING PCS->Writing Unix Device Drivers
Concat(ConstStr("MANAGING &amp; TRO"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("BLESHOOTING PCS")))==>Writing Unix Device Drivers->MANAGING &amp; TROUBLESHOOTING PCS
Concat(ConstStr("\"Pajari, George"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Meyers, Michael"->"Pajari, George"
Concat(ConstStr("\"Meyers, Michael"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Pajari, George"->"Meyers, Michael"
Concat(ConstStr("Foundations of Multidimensional And Metric "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ata Structures")))==>The Persona Lifecycle: Keeping People in Mind Throughout Product Design->Foundations of Multidimensional And Metric Data Structures
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -9)))), ConstStr("he Persona Lifecycle: Keeping People in Mind Throughout Product Design"))==>Foundations of Multidimensional And Metric Data Structures->The Persona Lifecycle: Keeping People in Mind Throughout Product Design
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Alphanumeric◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Comma◦WhiteSpace◦Lowercase word"), 1))), ConstStr("amet, Hanan\"")))==>"Pruitt, John S, and Adlin, Tamara"->"Samet, Hanan"
Concat(ConstStr("\"Pruitt, John "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(", and Adlin, Tamara\"")))==>"Samet, Hanan"->"Pruitt, John S, and Adlin, Tamara"
Concat(ConstStr("\"Embedded Linux: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Forward Slash"), 1), RegexPositionRelative(x, RegexPair("ε", "Forward Slash"), 1))), Concat(ConstStr(", "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), Concat(ConstStr(", "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("nterfacing\"")))))))))==>Computer Organization and Design: The Hardware/Software Interface->"Embedded Linux: Hardware, Software, and Interfacing"
Concat(ConstStr("Computer Organization "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Comma◦WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), Concat(ConstStr(" Design: The "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Comma"), 1))), Concat(ConstStr("/"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Comma"), -1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("nterface")))))))))==>"Embedded Linux: Hardware, Software, and Interfacing"->Computer Organization and Design: The Hardware/Software Interface
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -1))), ConstStr("ollabaugh, Craig\"")))==>"Patterson, David A.; Hennessy, John L."->"Hollabaugh, Craig"
Concat(ConstStr("\"Patterson, David A.; "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ennessy, John L.\"")))==>"Hollabaugh, Craig"->"Patterson, David A.; Hennessy, John L."
Concat(ConstStr("Windows "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr("ystem "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("rogramming")))))==>Smart Phone and Next Generation Mobile Computing->Windows System Programming
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), Concat(ConstStr("mart "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("hone and Next Generation Mobile Computing"))))==>Windows System Programming->Smart Phone and Next Generation Mobile Computing
Concat(ConstStr("\"Hart, Johnson M."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Pei Zheng, Lionel Ni"->"Hart, Johnson M."
Concat(ConstStr("\"Pei Zheng, Lionel Ni"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Hart, Johnson M."->"Pei Zheng, Lionel Ni"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RelativePosition(x, 17)))), ConstStr("elecommunications Law in the Internet Age"))==>An Introduction to the Finite Element Method (Mcgraw Hill Series in Mechanical Engineering)->Telecommunications Law in the Internet Age
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("n Introduction to the Finite Element Method (Mcgraw Hill Series in Mechanical Engineering)"))==>Telecommunications Law in the Internet Age->An Introduction to the Finite Element Method (Mcgraw Hill Series in Mechanical Engineering)
Concat(ConstStr("Sharon K"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Black")))==>J. N. Reddy->Sharon K Black
Concat(ConstStr("J. "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 5), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))), ConstStr(". Reddy")))==>Sharon K Black->J. N. Reddy
Concat(ConstStr("\"Professional Software Development: Shorter Schedules, Higher Quality Products, More Successful Projects, Enhanced"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Careers\"")))==>The Tao of Network Security Monitoring: Beyond Intrusion Detection->"Professional Software Development: Shorter Schedules, Higher Quality Products, More Successful Projects, Enhanced Careers"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 33), RegexPositionRelative(x, RegexPair("ε", "Colon"), 1)))), ConstStr("he Tao of Network Security Monitoring: Beyond Intrusion Detection"))==>"Professional Software Development: Shorter Schedules, Higher Quality Products, More Successful Projects, Enhanced Careers"->The Tao of Network Security Monitoring: Beyond Intrusion Detection
Concat(ConstStr("Steve M"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -7), RelativePosition(x, -6))), ConstStr("Connell")))==>"Bejtlich, Richard"->Steve McConnell
Concat(ConstStr("\"Bejtlich,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Richard\"")))==>Steve McConnell->"Bejtlich, Richard"
Concat(ConstStr("STRUCTURED COMPUTER ORGANIZATIO"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -10)))))==>Advanced Programming in the Unix Environment->STRUCTURED COMPUTER ORGANIZATION
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -3), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Upper Case"), -2))), ConstStr("dvanced Programming in the Unix Environment"))==>STRUCTURED COMPUTER ORGANIZATION->Advanced Programming in the Unix Environment
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 3)))), ConstStr("ANENBAUM"))==>"Stevens, W. Richard"->TANENBAUM
Concat(ConstStr("\"S"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), 1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), 1)))), ConstStr("evens, W. Richard\"")))==>TANENBAUM->"Stevens, W. Richard"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("eb Development and Design Foundations with XHTML"))==>Windows Security Fundamentals: For Windows 2003 Sp1 and R2->Web Development and Design Foundations with XHTML
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("indows Security Fundamentals: For Windows 2003 Sp1 and R2"))==>Web Development and Design Foundations with XHTML->Windows Security Fundamentals: For Windows 2003 Sp1 and R2
Concat(ConstStr("\"Felke-Morris, Terry"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"de Clercq, Jan Grillenmeier, Guido"->"Felke-Morris, Terry"
Concat(ConstStr("\"de Clercq, Jan Grillenmeier, Guido"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Felke-Morris, Terry"->"de Clercq, Jan Grillenmeier, Guido"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦WhiteSpace"), -1))), ConstStr("undamentals of Network Security"))==>DATABASE DESIGN FOR SMARTIES->Fundamentals of Network Security
Concat(ConstStr("DATABASE DESIGN FOR SMARTIE"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))))==>Fundamentals of Network Security->DATABASE DESIGN FOR SMARTIES
Concat(ConstStr("Eric "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("aiwald")))==>"Muller, Robert J."->Eric Maiwald
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("uller, Robert J.\"")))==>Eric Maiwald->"Muller, Robert J."
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("he C++ Programming Language (3rd Edition)"))==>Doing Hard Time.->The C++ Programming Language (3rd Edition)
Concat(ConstStr("Doing Hard "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ime.")))==>The C++ Programming Language (3rd Edition)->Doing Hard Time.
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("jarne Stroustrup"))==>Bruce Powel Douglass->Bjarne Stroustrup
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ruce Powel Douglass"))==>Bjarne Stroustrup->Bruce Powel Douglass
Concat(ConstStr("From Cobol T"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -7))), ConstStr(" Oop")))==>Database Design for Smarties: Using UML for Data Modeling->From Cobol To Oop
Concat(ConstStr("Database Design for Smarties: Using UML for Data "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 3), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))), ConstStr("odeling")))==>From Cobol To Oop->Database Design for Smarties: Using UML for Data Modeling
Concat(ConstStr("\"Knasmuller, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("arkus\"")))==>Robert J. Muller->"Knasmuller, Markus"
Concat(ConstStr("Robert J. "), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToSimpleTitleCase(SubStr(x, PosPair(RelativePosition(x, 5), RegexPositionRelative(x, RegexPair("ε", "Comma"), 1)))))==>"Knasmuller, Markus"->Robert J. Muller
Concat(ConstStr("Hacknotes Windows Security Portable "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1))), ConstStr("eference")))==>"COM and CORBA Side by Side: Architectures, Strategies, and Implementations, by Pritchard"->Hacknotes Windows Security Portable Reference
Concat(ConstStr("\"COM and CORBA Side by Side: Architectures, Strategies, and Implementations, by "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("ritchard\"")))==>Hacknotes Windows Security Portable Reference->"COM and CORBA Side by Side: Architectures, Strategies, and Implementations, by Pritchard"
Concat(ConstStr("\"O'Dea, Michael"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Pritchard, Jason"->"O'Dea, Michael"
Concat(ConstStr("\"Pritchard, Jason"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"O'Dea, Michael"->"Pritchard, Jason"
Concat(ConstStr("Human-Computer Interaction "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -24), RelativePosition(x, -22))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦ALL CAPS"), 1))), ConstStr(" New Millennium")))))==>Usability for the Web - Designing Web Sites that Work->Human-Computer Interaction in the New Millennium
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2)))), ConstStr("sability for the Web - Designing Web Sites that Work"))==>Human-Computer Interaction in the New Millennium->Usability for the Web - Designing Web Sites that Work
Concat(ConstStr("\"Carroll, John M."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Brinck,Tom"->"Carroll, John M."
Concat(ConstStr("\"Brinck,Tom"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Carroll, John M."->"Brinck,Tom"
Concat(ConstStr("\"C++ Programming Language: Special Edition, 3E "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr("\"")))==>"The Executive Guide to Information Security: Threats, Challenges, and Solutions"->"C++ Programming Language: Special Edition, 3E The"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1))), ConstStr(" Executive Guide to Information Security: Threats, Challenges, and Solutions\"")))==>"C++ Programming Language: Special Edition, 3E The"->"The Executive Guide to Information Security: Threats, Challenges, and Solutions"
Concat(ConstStr("Stroustrup"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Bjarne")))==>"Egan, Mark"->Stroustrup Bjarne
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("ε", "Line Separator"), -1)))), ConstStr("gan, Mark\"")))==>Stroustrup Bjarne->"Egan, Mark"
Concat(ConstStr("Securing Storage: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS◦WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), ConstStr(" SAN and NAS Security")))==>"Understanding Your Users A Practical Guide to User Requirements, Methods, Tools and Techniques"->Securing Storage: A Practical Guide to SAN and NAS Security
Concat(ConstStr("\"Understanding Your Users "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), Concat(ConstStr(" User Requirements, Methods, Tools "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), -1))), ConstStr(" Techniques\"")))))==>Securing Storage: A Practical Guide to SAN and NAS Security->"Understanding Your Users A Practical Guide to User Requirements, Methods, Tools and Techniques"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -4), RelativePosition(x, -3)))), ConstStr("imanshu Dwivedi"))==>"Courage, Catherine/ Baxter, Kathy"->Himanshu Dwivedi
Concat(ConstStr("\"Courage, Catherine/ Baxter,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Kathy\"")))==>Himanshu Dwivedi->"Courage, Catherine/ Baxter, Kathy"
Concat(ConstStr("Simply "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("# An Application-Driven Tutorial Approach")))==>Communicating with Email and the Internet->Simply C# An Application-Driven Tutorial Approach
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Hash"), 1))), ConstStr("ommunicating with Email and the Internet"))==>Simply C# An Application-Driven Tutorial Approach->Communicating with Email and the Internet
Concat(ConstStr("Harvey "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1))), ConstStr(". Deitel")))==>P.K. McBride 0->Harvey M. Deitel
Concat(ConstStr("P.K. "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Dot"), 1))), ConstStr("cBride 0")))==>Harvey M. Deitel->P.K. McBride 0
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("atabase Access With Visual Basic(R) .net (Kaleidoscope)"))==>Art Theory for Web Design->Database Access With Visual Basic(R) .net (Kaleidoscope)
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("rt Theory for Web Design"))==>Database Access With Visual Basic(R) .net (Kaleidoscope)->Art Theory for Web Design
Concat(ConstStr("\"Mcmanus, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), ConstStr("effrey P.\"")))==>"Golbeck (Author) Golbeck, Jennifer (Author)"->"Mcmanus, Jeffrey P."
Concat(ConstStr("\"Golbeck (Author) Golbeck, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1))), ConstStr("ennifer (Author)\"")))==>"Mcmanus, Jeffrey P."->"Golbeck (Author) Golbeck, Jennifer (Author)"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case◦Upper Case", "ε"), 1))), ConstStr("-INSIDE SERVLETS 2/E CDUNI"))==>WEB USABILITY A USER-CENTERED DESIGN APPROACH->S-INSIDE SERVLETS 2/E CDUNI
Concat(ConstStr("W"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), ConstStr("B USABILITY A USER-CENTERED DESIGN APPROACH")))==>S-INSIDE SERVLETS 2/E CDUNI->WEB USABILITY A USER-CENTERED DESIGN APPROACH
Concat(ConstStr("\"Callaway, Dustin "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Comma"), 1), RegexPositionRelative(x, RegexPair("ε", "Comma"), 1))), ConstStr(".\"")))==>"LAZAR, JONATHAN"->"Callaway, Dustin R."
Concat(ConstStr("\"LAZA"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr(", JONATHAN\"")))==>"Callaway, Dustin R."->"LAZAR, JONATHAN"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr(" Server 2003/2000 Terminal Server Solutions"))==>Windows Forms 2005 Programming in C#->Windows Server 2003/2000 Terminal Server Solutions
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr(" Forms 2005 Programming in C#"))==>Windows Server 2003/2000 Terminal Server Solutions->Windows Forms 2005 Programming in C#
Concat(ConstStr("Todd "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr(". "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), ConstStr("athers")))))==>"Chris Sells, Mike Weinhardt"->Todd W. Mathers
Concat(ConstStr("\"Chris Sells, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("ike "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Dot"), 1))), ConstStr("einhardt\"")))))==>Todd W. Mathers->"Chris Sells, Mike Weinhardt"
Concat(ConstStr("Learning SQL:A Step-By-Step Guide "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("sing Oracle")))==>User Interface Design: A Software Engineering Perspective->Learning SQL:A Step-By-Step Guide Using Oracle
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), Concat(ConstStr("ser Interface Design: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Hyphen"), 1))), ConstStr("oftware Engineering Perspective"))))==>Learning SQL:A Step-By-Step Guide Using Oracle->User Interface Design: A Software Engineering Perspective
Concat(ConstStr("\"Earp, Richard Walsh/ Bagui, Sikha Saha"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Lauesen, Soren"->"Earp, Richard Walsh/ Bagui, Sikha Saha"
Concat(ConstStr("\"Lauesen, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("oren\"")))==>"Earp, Richard Walsh/ Bagui, Sikha Saha"->"Lauesen, Soren"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("ile System "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), -1), RelativePosition(x, -2))), ConstStr(" Analysis"))))==>Hacking Exposed Computer Forensics->File System Forensic Analysis
Concat(ConstStr("Hacking Exposed Computer "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("orensics")))==>File System Forensic Analysis->Hacking Exposed Computer Forensics
Concat(ConstStr("Brian "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("arrier")))==>"Davis, Chris"->Brian Carrier
Concat(ConstStr("\"Davis, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("hris\"")))==>Brian Carrier->"Davis, Chris"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -5), RelativePosition(x, -4)))), ConstStr("he Java(TM) Programming Language"))==>Fundamentals of Database Systems->The Java(TM) Programming Language
Concat(ConstStr("Fundamentals of Database"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Systems")))==>The Java(TM) Programming Language->Fundamentals of Database Systems
Concat(ConstStr("\"Arnold, Ken, Gosling, James, Holmes, David"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Elmasri, RamezNavathe, Shamkant B."->"Arnold, Ken, Gosling, James, Holmes, David"
Concat(ConstStr("\"Elmasri, RamezNavathe, Shamkant B."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Arnold, Ken, Gosling, James, Holmes, David"->"Elmasri, RamezNavathe, Shamkant B."
Concat(ConstStr("\"Java(T"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 1))), ConstStr(") EE 5 Tutorial, The (3rd Edition) (The Java Series)\"")))==>3D GAME ENGINE DESIGN 2/E->"Java(TM) EE 5 Tutorial, The (3rd Edition) (The Java Series)"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Number"), -1), RegexPositionRelative(x, RegexPair("Number", "ε"), -1))), ConstStr("D GAME ENGINE DESIGN 2/E"))==>"Java(TM) EE 5 Tutorial, The (3rd Edition) (The Java Series)"->3D GAME ENGINE DESIGN 2/E
Concat(ConstStr("\"Eric Jendrock, Jennifer Ball, Debbie Carson, Ian Evans, Scott Fordin, Kim "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("\"")))==>"Eberly, David H."->"Eric Jendrock, Jennifer Ball, Debbie Carson, Ian Evans, Scott Fordin, Kim H"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr("berly, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 2), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 2))), Concat(ConstStr("avid "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1))), ConstStr(".\"")))))))==>"Eric Jendrock, Jennifer Ball, Debbie Carson, Ian Evans, Scott Fordin, Kim H"->"Eberly, David H."
Concat(ConstStr("\"Voice &amp; Data Communications Handbook, Fifth "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Colon"), 1))), ConstStr("dition\"")))==>Software Engineering: (Update)->"Voice &amp; Data Communications Handbook, Fifth Edition"
Concat(ConstStr("Software "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ngineering: (Update)")))==>"Voice &amp; Data Communications Handbook, Fifth Edition"->Software Engineering: (Update)
Concat(ConstStr("BATE"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))))==>"Sommerville, Ian"->BATES
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), -1))), ConstStr("ommerville, Ian\"")))==>BATES->"Sommerville, Ian"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash", "ε"), 1), RegexPositionRelative(x, RegexPair("Forward Slash◦Upper Case", "ε"), 1))), Concat(ConstStr("ntroduction to "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr("omputers Using Window 98"))))==>C++ Distilled: A Concise ANSI/ISO Reference and Style Guide->Introduction to Computers Using Window 98
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("++ Distilled: A Concise ANSI/ISO Reference and Style Guide"))==>Introduction to Computers Using Window 98->C++ Distilled: A Concise ANSI/ISO Reference and Style Guide
Concat(ConstStr("N"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 3))), ConstStr("rton")))==>"Pohl, Ira"->Norton
Concat(ConstStr("\"P"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1), RelativePosition(x, 2))), ConstStr("hl, Ira\"")))==>Norton->"Pohl, Ira"
Concat(ConstStr("Operating "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr("ystems: A "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ystematic View")))))==>Stl Tutrl&amp; Ref Gd: C++ Progrmmg W/Stndard Tem->Operating Systems: A Systematic View
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Colon"), 1))), ConstStr("tl Tutrl&amp; Ref Gd: C++ Progrmmg W/Stndard Tem"))==>Operating Systems: A Systematic View->Stl Tutrl&amp; Ref Gd: C++ Progrmmg W/Stndard Tem
Concat(ConstStr("\"Davis, William S.; Rajkumar, T. "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(".\"")))==>Musser->"Davis, William S.; Rajkumar, T. M."
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("usser"))==>"Davis, William S.; Rajkumar, T. M."->Musser
Concat(ConstStr("\"Bundle of Algorithms in C++, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), ConstStr(" Graph Algorithms\"")))==>Information Modeling and Relational Databases->"Bundle of Algorithms in C++, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms"
Concat(ConstStr("Information Modeling "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Comma◦WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), -1))), Concat(ConstStr(" Relational "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Alphanumeric◦',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("Words/dots/hyphens◦',' or 'and'◦ALL CAPS", "ε"), 1))), ConstStr("atabases")))))==>"Bundle of Algorithms in C++, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms"->Information Modeling and Relational Databases
Concat(ConstStr("\"Sedgewick, Robert (Author)"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Halpin, Terry"->"Sedgewick, Robert (Author)"
Concat(ConstStr("\"Halpin, Terry"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Sedgewick, Robert (Author)"->"Halpin, Terry"
Concat(ConstStr("Art Theory "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Single Quote◦Alphanumeric◦WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Camel Case◦WhiteSpace"), 1))), Concat(ConstStr(" "), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), -1), RelativePosition(x, -4))))))==>GUI Bloopers: Don'ts and Do's for Software Developers and Web Designers->Art Theory for Web Design
Concat(ConstStr("GUI Bloopers: Don'ts and Do's for Software Developers and "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1))), ConstStr("esigners")))==>Art Theory for Web Design->GUI Bloopers: Don'ts and Do's for Software Developers and Web Designers
Concat(ConstStr("\"Golbeck, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ennifer\"")))==>"Johnson, Jeff"->"Golbeck, Jennifer"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("ohnson, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("eff\"")))))==>"Golbeck, Jennifer"->"Johnson, Jeff"
Concat(ConstStr("Exploiting "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Camel Case"), -1), RegexPositionRelative(x, RegexPair("Camel Case", "ε"), -1))), Concat(ConstStr(" : "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Double Quote", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Camel Case", "ε"), 1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Hyphen"), 1))), ConstStr("ode")))))))==>"How to Break Web Software, w. CD-ROM"->Exploiting Software : How to Break Code
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), Concat(ConstStr(" Web "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Colon"), 1))), Concat(ConstStr(", "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -16), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Lowercase word"), 1))), Concat(ConstStr(". "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("D-ROM\"")))))))))==>Exploiting Software : How to Break Code->"How to Break Web Software, w. CD-ROM"
Concat(ConstStr("Greg "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -9)))), ConstStr("oglund")))==>"Mike Andrews, James A. Whittaker"->Greg Hoglund
Concat(ConstStr("\"Mike Andrews, James A."), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Whittaker\"")))==>Greg Hoglund->"Mike Andrews, James A. Whittaker"
Concat(ConstStr("Computer Systems "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Words/dots/hyphens◦WhiteSpace"), -1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1)))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("rchitecture")))))))==>User Interface Design And Evaluation->Computer Systems Design and Architecture
Concat(ConstStr("User Interface "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToSimpleTitleCase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦',' or 'and'"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1)))), ConstStr(" Evaluation")))==>Computer Systems Design and Architecture->User Interface Design And Evaluation
Concat(ConstStr("\"Heuring, Vincent P.; "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -1))), ConstStr("ordan, Harry F.\"")))==>"Stone, Debbie/ Jarrett, Caroline/ Woodro"->"Heuring, Vincent P.; Jordan, Harry F."
Concat(ConstStr("\"Stone, Debbie/ "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -1))), ConstStr("arrett, Caroline/ Woodro\"")))==>"Heuring, Vincent P.; Jordan, Harry F."->"Stone, Debbie/ Jarrett, Caroline/ Woodro"
Concat(ConstStr("Java 2 Programmer'"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1)))), ConstStr(" Interactive Workbook")))==>"Data Mining, Second Edition, Second Edition : Concepts and Techniques (The Morgan Kaufmann Series in Data Management Systems) (The Morgan Kaufmann Series in Data Management Systems)"->Java 2 Programmer's Interactive Workbook
Concat(ConstStr("\"Data"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Mining, Second Edition, Second Edition : Concepts and Techniques (The Morgan Kaufmann Series in Data Management Systems) (The Morgan Kaufmann Series in Data Management Systems)\"")))==>Java 2 Programmer's Interactive Workbook->"Data Mining, Second Edition, Second Edition : Concepts and Techniques (The Morgan Kaufmann Series in Data Management Systems) (The Morgan Kaufmann Series in Data Management Systems)"
Concat(ConstStr("\"Chu, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("evinBrower, Eric\"")))==>Jiawei Han; Micheline Kamber->"Chu, KevinBrower, Eric"
Concat(ConstStr("Jiawei Han; Micheline "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("amber")))==>"Chu, KevinBrower, Eric"->Jiawei Han; Micheline Kamber
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("he Mobile Connection, The Cell Phone's Impact on Society\"")))==>"Designing Interactive Systems : People, Activities, Contexts, Technologies"->"The Mobile Connection, The Cell Phone's Impact on Society"
Concat(ConstStr("\"Designing Interactive Systems : People, Activities, Contexts, Technologies"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"The Mobile Connection, The Cell Phone's Impact on Society"->"Designing Interactive Systems : People, Activities, Contexts, Technologies"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, 4), RelativePosition(x, 5))), ConstStr(" (author) Ling, Rich\""))))==>"Benyon, David; Turner, Phil; Turner, Susan"->"By (author) Ling, Rich"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("enyon, David; Turner, Phil; Turner, Susan\"")))==>"By (author) Ling, Rich"->"Benyon, David; Turner, Phil; Turner, Susan"
Concat(ConstStr("Windows Forensics "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("ncident Recovery")))))==>Broadband Internet Connections : A User's Guide To Dsl And Cable->Windows Forensics And Incident Recovery
Concat(ConstStr("Broadband Internet Connections : A User's Guide To Dsl "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace◦Words/dots/hyphens◦WhiteSpace"), -1))), ConstStr(" Cable")))==>Windows Forensics And Incident Recovery->Broadband Internet Connections : A User's Guide To Dsl And Cable
Concat(ConstStr("\"Carvey, Harlan"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Smith, Roderick W."->"Carvey, Harlan"
Concat(ConstStr("\"Smith, Roderick W."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Carvey, Harlan"->"Smith, Roderick W."
Concat(ConstStr("S"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Colon"), 1))), Concat(ConstStr("L Server 2005 "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("istilled")))))==>Data Quality: The Accuracy Dimension->SQL Server 2005 Distilled
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ata Quality: The Accuracy Dimension"))==>SQL Server 2005 Distilled->Data Quality: The Accuracy Dimension
Concat(ConstStr("\"Brown, Eric L."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Olson, Jack"->"Brown, Eric L."
Concat(ConstStr("\"Olson, Jack"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Brown, Eric L."->"Olson, Jack"
Concat(ConstStr("VISUAL C++ HOW TO PROGRA"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -10), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1)))))==>Artificial Intelligence: Structures and Strategies for Complex Problem Solving->VISUAL C++ HOW TO PROGRAM
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1))), ConstStr("rtificial Intelligence: Structures and Strategies for Complex Problem Solving"))==>VISUAL C++ HOW TO PROGRAM->Artificial Intelligence: Structures and Strategies for Complex Problem Solving
Concat(ConstStr("\"DEITEL, HARVEY M. DEITEL, PAUL J."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Luger, George F."->"DEITEL, HARVEY M. DEITEL, PAUL J."
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Comma"), 1), RegexPositionRelative(x, RegexPair("ε", "Comma"), 1))), ConstStr("uger, George F.\"")))==>"DEITEL, HARVEY M. DEITEL, PAUL J."->"Luger, George F."
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -6), RegexPositionRelative(x, RegexPair("ε", "Star"), -1)))), ConstStr("igital Geometry: Geometric Methods for Digital Image Analysis (The Morgan."))==>On to C++ *aod* Cp->Digital Geometry: Geometric Methods for Digital Image Analysis (The Morgan.
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -6)))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -3), RegexPositionRelative(x, RegexPair("ε", "Dot"), 1))), ConstStr(" to C++ *aod* Cp")))==>Digital Geometry: Geometric Methods for Digital Image Analysis (The Morgan.->On to C++ *aod* Cp
let columnName = "0" in let x = ChooseInput(vs, columnName) in Lookup(x, {Some "Winston": "0"})==>Winston->0
let columnName = "0" in let x = ChooseInput(vs, columnName) in Lookup(x, {Some "0": "Winston"})==>0->Winston
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Hyphen◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Hyphen◦WhiteSpace◦Alphanumeric", "ε"), 1))), ConstStr(" Java Developers Almanac 1.4"))==>Digital Video and HDTV Algorithms and Interfaces - The Morgan Kaufmann Series ..->The Java Developers Almanac 1.4
Concat(ConstStr("Digital Video and HDTV Algorithms and Interfaces - The Morgan Kaufmann Series"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("..")))==>The Java Developers Almanac 1.4->Digital Video and HDTV Algorithms and Interfaces - The Morgan Kaufmann Series ..
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("atrick Chan"))==>Poynton->Patrick Chan
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("oynton"))==>Patrick Chan->Poynton
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Single Quote", "ε"), 1), RegexPositionRelative(x, RegexPair("Single Quote◦Alphanumeric", "ε"), 1)))), ConstStr("chaum's Outline of Computer Architecture"))==>"Business Process Change - A Manager's Guide to Improving, Redesigning and Auto.."->Schaum's Outline of Computer Architecture
Concat(ConstStr("\"Business Process "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("hange - A Manager's Guide to Improving, Redesigning and Auto..\"")))==>Schaum's Outline of Computer Architecture->"Business Process Change - A Manager's Guide to Improving, Redesigning and Auto.."
Concat(ConstStr("\"Carter, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1)))), ConstStr("icholas\"")))==>Harmon->"Carter, Nicholas"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -7), RelativePosition(x, -6)))), ConstStr("armon"))==>"Carter, Nicholas"->Harmon
Concat(ConstStr("System Architecture with X"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("L")))==>Modern Database Management (8th Edition)->System Architecture with XML
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1))), ConstStr("odern Database Management (8th Edition)"))==>System Architecture with XML->Modern Database Management (8th Edition)
Concat(ConstStr("Berthold "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -3), RegexPositionRelative(x, RegexPair("ε", "Double Quote"), -1)))), ConstStr("aum")))==>"Hoffer, Jeffrey A.; Prescott, Mary; McFadden, Fred"->Berthold Daum
Concat(ConstStr("\"Hoffer, Jeffrey A.; Prescott, Mary; McFadden,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Fred\"")))==>Berthold Daum->"Hoffer, Jeffrey A.; Prescott, Mary; McFadden, Fred"
Concat(ConstStr("SOFTWARE SECURITY-W/C"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))))==>Designing Apps With MSMQ->SOFTWARE SECURITY-W/CD
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), -1))), ConstStr("esigning Apps With MSMQ"))==>SOFTWARE SECURITY-W/CD->Designing Apps With MSMQ
Concat(ConstStr("MCGR"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("W")))==>"Dickman, Alan"->MCGRAW
Concat(ConstStr("\"Dickman, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1))), ConstStr("lan\"")))==>MCGRAW->"Dickman, Alan"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("List of Lower Case◦WhiteSpace◦ALL CAPS", "ε"), 1))), Concat(ConstStr("he "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("List of Lower Case◦WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("he"))))==>An Introduction To Nurbs : With Historical Perspective->The The
Concat(ConstStr("An Introduction "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("o Nurbs : With Historical Perspective")))==>The The->An Introduction To Nurbs : With Historical Perspective
Concat(ConstStr("\"Laurel, Brenda"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Rogers, David F."->"Laurel, Brenda"
Concat(ConstStr("\"Rogers, David F."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Laurel, Brenda"->"Rogers, David F."
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 3), RelativePosition(x, 4)))), ConstStr("ata Model Patterns: A Metadata Map"))==>Windows Security Fundamentals->Data Model Patterns: A Metadata Map
Concat(ConstStr("Windows "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 18), RegexPositionRelative(x, RegexPair("ε", "Colon"), 1)))), ConstStr("ecurity Fundamentals")))==>Data Model Patterns: A Metadata Map->Windows Security Fundamentals
Concat(ConstStr("\"By (author) Hay, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), Concat(ConstStr("avid "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Camel Case◦Comma"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), 1))), ConstStr(".\"")))))==>"Jan DeClercq, Grillenmeier"->"By (author) Hay, David C."
Concat(ConstStr("\"Jan DeClercq, Grillenmeier"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"By (author) Hay, David C."->"Jan DeClercq, Grillenmeier"
Concat(ConstStr("C++ "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), -1), RelativePosition(x, -2))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("rogramming")))))==>Principles and Practices of Interconnection Networks->C++ Network Programming
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("rinciples and Practices of Interconnection Networks"))==>C++ Network Programming->Principles and Practices of Interconnection Networks
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr("ouglas C. Schmidt, Stephen "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(". Huston\"")))))==>"Dally,William James"->"Douglas C. Schmidt, Stephen D. Huston"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ally,William James\"")))==>"Douglas C. Schmidt, Stephen D. Huston"->"Dally,William James"
Concat(ConstStr("Kernel "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), 2))), ConstStr("rojects for Linux")))==>SUN CERTIFIED PROGRAMMER FOR JAVA 5 STUDY GUIDE EXAM 310-055->Kernel Projects for Linux
Concat(ConstStr("SUN CERTIFIED "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("ROGRAMMER FOR JAVA 5 STUDY GUIDE EXAM 310-055")))==>Kernel Projects for Linux->SUN CERTIFIED PROGRAMMER FOR JAVA 5 STUDY GUIDE EXAM 310-055
Concat(ConstStr("\"Nutt, Gary J.; Nutt, Gary"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"SIERRA, KATHY BATES, BERT"->"Nutt, Gary J.; Nutt, Gary"
Concat(ConstStr("\"SIERRA, KATHY BATES, BERT"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Nutt, Gary J.; Nutt, Gary"->"SIERRA, KATHY BATES, BERT"
Concat(ConstStr("Effective Java Programming "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("anguage Guide")))==>Managing Legal and Security Risks in Computing and Communications->Effective Java Programming Language Guide
Concat(ConstStr("Managing "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("egal and Security Risks in Computing and Communications")))==>Effective Java Programming Language Guide->Managing Legal and Security Risks in Computing and Communications
Concat(ConstStr("\"Bloch, Joshua"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Shaw, Paul"->"Bloch, Joshua"
Concat(ConstStr("\"Shaw, Paul"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Bloch, Joshua"->"Shaw, Paul"
Concat(ConstStr("The Object Data "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Colon"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Colon"), 1))), ConstStr("tandard Odmg 3.0")))==>XML Family of Specifications: A Practical Guide->The Object Data Standard Odmg 3.0
Concat(ConstStr("XML Family of "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Words/dots/hyphens◦WhiteSpace◦Words/dots/hyphens"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace◦ALL CAPS"), -1))), ConstStr("pecifications: A Practical Guide")))==>The Object Data Standard Odmg 3.0->XML Family of Specifications: A Practical Guide
Concat(ConstStr("\"Cattell, R. G. G. (EDT)/ "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Dot"), 1))), Concat(ConstStr("arry, Douglas "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr(". (EDT)\"")))))==>Kenneth B. Sall->"Cattell, R. G. G. (EDT)/ Barry, Douglas K. (EDT)"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Lowercase word◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Dot"), -1))), Concat(ConstStr("enneth "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -1))), ConstStr(". Sall"))))==>"Cattell, R. G. G. (EDT)/ Barry, Douglas K. (EDT)"->Kenneth B. Sall
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦',' or 'and'"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦',' or 'and'"), 1))), Concat(ConstStr("istributed "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Colon"), 1), RegexPositionRelative(x, RegexPair("Colon", "ε"), -1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Colon"), 1))), Concat(ConstStr("oncepts "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "Lowercase word"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), -1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦',' or 'and'"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦',' or 'and'"), 1))), ConstStr("esign (4th Edition)")))))))))))==>Btrieve Complete: A Guide for Developers and Systems Administrators->Distributed Systems: Concepts and Design (4th Edition)
Concat(ConstStr("Btrieve Complete: A Guide for Developers "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), 1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Colon"), 1))), ConstStr(" Administrators")))))==>Distributed Systems: Concepts and Design (4th Edition)->Btrieve Complete: A Guide for Developers and Systems Administrators
Concat(ConstStr("Coulour"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -3))), ConstStr("s")))==>"Kyle, Jim"->Coulouris
Concat(ConstStr("\"Kyle, J"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -3), RelativePosition(x, -2))), ConstStr("m\"")))==>Coulouris->"Kyle, Jim"
Concat(ConstStr("BUSINESS INTELLIGENCE W/SQL S"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace◦Words/dots/hyphens◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace◦ALL CAPS", "ε"), 1))))==>Patterns for Effective Use Cases->BUSINESS INTELLIGENCE W/SQL SE
Concat(ConstStr("Patterns for "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case"), -1), RegexPositionRelative(x, RegexPair("Upper Case", "ε"), -1))), Concat(ConstStr("ffective "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToLowercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), -1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), -1)))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦WhiteSpace"), 2), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦WhiteSpace"), 2))), ConstStr("ases"))))))))==>BUSINESS INTELLIGENCE W/SQL SE->Patterns for Effective Use Cases
Concat(ConstStr("\"Hancock, John "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace", "ε"), 2), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -2))), ConstStr(".\"")))==>"Adolph, Steve; Bramble, Paul; Cockburn, Alistair; Polson, Andy"->"Hancock, John C."
Concat(ConstStr("\"Adolph, Steve; Bramble, Paul; "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ockburn, Alistair; Polson, Andy\"")))==>"Hancock, John C."->"Adolph, Steve; Bramble, Paul; Cockburn, Alistair; Polson, Andy"
Concat(ConstStr("Mining the "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("WhiteSpace◦Upper Case", "ε"), -1))), ConstStr("eb: Analysis of Hypertext and Semi Structured Data")))==>USABILITY FOR THE WEB->Mining the Web: Analysis of Hypertext and Semi Structured Data
Concat(ConstStr("U"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace◦ALL CAPS", "ε"), 1))), Concat(ConstStr("BILITY FOR "), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Colon"), 1))))))))==>Mining the Web: Analysis of Hypertext and Semi Structured Data->USABILITY FOR THE WEB
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), -1), RegexPositionRelative(x, RegexPair("',' or 'and'◦Upper Case", "ε"), -1))), Concat(ConstStr("oumen "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Comma"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Comma"), 1))), ConstStr("hakrabarti"))))==>"BRINCK, TOMGERGLE, DARRENWOOD, SCOTT D."->Soumen Chakrabarti
Concat(ConstStr("\"BRIN"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), Concat(ConstStr("K, TOMGERGLE, DARRENWOOD, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("OTT D.\""))))))==>Soumen Chakrabarti->"BRINCK, TOMGERGLE, DARRENWOOD, SCOTT D."
Concat(ConstStr("Distributed"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Algorithms")))==>Securing the HP Nonstop Server in the Op->Distributed Algorithms
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("ε", "Line Separator"), -1)))), ConstStr("ecuring the HP Nonstop Server in the Op"))==>Distributed Algorithms->Securing the HP Nonstop Server in the Op
Concat(ConstStr("\"Lynch, Nancy A.; Lynch,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Nancy\"")))==>Xypro Technology Cor->"Lynch, Nancy A.; Lynch, Nancy"
Concat(ConstStr("Xypro Technology "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -4), RelativePosition(x, -3)))), ConstStr("or")))==>"Lynch, Nancy A.; Lynch, Nancy"->Xypro Technology Cor
Concat(ConstStr("WEB DEVELOPMENT AND DESIGN FOUNDATIONS WITH XHTM"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 8), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1)))))==>Practical Oracle 8i: Building Efficient Databases->WEB DEVELOPMENT AND DESIGN FOUNDATIONS WITH XHTML
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 5), RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 6))), ConstStr("ractical Oracle 8i: Building Efficient Databases"))==>WEB DEVELOPMENT AND DESIGN FOUNDATIONS WITH XHTML->Practical Oracle 8i: Building Efficient Databases
Concat(ConstStr("\"FE"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("KE-MORRIS, TERRY\"")))==>Jonathan Lewis->"FELKE-MORRIS, TERRY"
Concat(ConstStr("Jonathan "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦Hyphen"), 1))), ConstStr("ewis")))==>"FELKE-MORRIS, TERRY"->Jonathan Lewis
Concat(ConstStr("WEB SECURITY - A STEP-BY-STEP REFEENCE GUID"), let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("ε", "Line Separator"), -1)))))==>Computer Networking Complete Package->WEB SECURITY - A STEP-BY-STEP REFEENCE GUIDE
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Upper Case◦Upper Case◦WhiteSpace"), -1), RegexPositionRelative(x, RegexPair("ε", "Upper Case◦WhiteSpace"), -1))), ConstStr("omputer Networking Complete Package"))==>WEB SECURITY - A STEP-BY-STEP REFEENCE GUIDE->Computer Networking Complete Package
Concat(ConstStr("\"Stein, L.D"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Kurose, James F., Ross, Keith W."->"Stein, L.D"
Concat(ConstStr("\"Kurose, James F., Ross, Keith W."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Stein, L.D"->"Kurose, James F., Ross, Keith W."
Concat(ConstStr("Privacy "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("hat Developers &amp; It Professiona")))==>Internet Effectively: A Beginners Guide to the World Wide Web->Privacy What Developers &amp; It Professiona
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("nternet Effectively: A Beginners Guide to the World Wide Web"))==>Privacy What Developers &amp; It Professiona->Internet Effectively: A Beginners Guide to the World Wide Web
Concat(ConstStr("\"Cannon, J C"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Tyrone Adams , University of Louisiana, Lafayette Sharon Scoll"->"Cannon, J C"
Concat(ConstStr("\"Tyrone Adams , University of Louisiana, Lafayette Sharon Scoll"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Cannon, J C"->"Tyrone Adams , University of Louisiana, Lafayette Sharon Scoll"
Concat(ConstStr("Compilers 1/e plus Selected Online Chapters from Compilers 2/"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RelativePosition(x, -13), RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), -1))), ConstStr(" Update Package")))==>Modern Database Management->Compilers 1/e plus Selected Online Chapters from Compilers 2/e Update Package
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -31), RegexPositionRelative(x, RegexPair("WhiteSpace◦Lowercase word", "ε"), -1)))), ConstStr("odern Database Management"))==>Compilers 1/e plus Selected Online Chapters from Compilers 2/e Update Package->Modern Database Management
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1), RelativePosition(x, -6)))), ConstStr("lfred V. Aho; Monica S. Lam; Ravi Sethi; Jeffrey D. Ullman"))==>"Hoffer, Prescott &amp; McFadden"->Alfred V. Aho; Monica S. Lam; Ravi Sethi; Jeffrey D. Ullman
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Semicolon"), 1), RelativePosition(x, 12)))), ConstStr("offer, Prescott &amp; McFadden\"")))==>Alfred V. Aho; Monica S. Lam; Ravi Sethi; Jeffrey D. Ullman->"Hoffer, Prescott &amp; McFadden"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Camel Case◦WhiteSpace", "ε"), -1), RelativePosition(x, -11)))), ConstStr("ifth Generation Management: Co-Creating Through Virtual Enterprising, Dynamic Teaming, and Knowledge Networking\"")))==>Cascading Style Sheets: Designing for the Web->"Fifth Generation Management: Co-Creating Through Virtual Enterprising, Dynamic Teaming, and Knowledge Networking"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Hyphen", "ε"), 1), RegexPositionRelative(x, RegexPair("Hyphen◦ALL CAPS", "ε"), 1))), Concat(ConstStr("ascading Style Sheets: "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("',' or 'and'", "ε"), 1), RegexPositionRelative(x, RegexPair("',' or 'and'◦ALL CAPS", "ε"), 1))), ConstStr("esigning for the Web"))))==>"Fifth Generation Management: Co-Creating Through Virtual Enterprising, Dynamic Teaming, and Knowledge Networking"->Cascading Style Sheets: Designing for the Web
Concat(ConstStr("\"Savage, Charles M."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Lie, Hakon Wium Bos, Bert"->"Savage, Charles M."
Concat(ConstStr("\"Lie, Hakon Wium Bos, Bert"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Savage, Charles M."->"Lie, Hakon Wium Bos, Bert"
Concat(ConstStr("\"HCI "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("odels, Theories, and Frameworks: Toward a Multidisciplinary Science (The Morgan Kaufmann Series in Interactive Technologies)\"")))==>Moving to Free Software->"HCI Models, Theories, and Frameworks: Toward a Multidisciplinary Science (The Morgan Kaufmann Series in Interactive Technologies)"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1))), ConstStr("oving to Free Software"))==>"HCI Models, Theories, and Frameworks: Toward a Multidisciplinary Science (The Morgan Kaufmann Series in Interactive Technologies)"->Moving to Free Software
Concat(ConstStr("\"Carroll, John "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr(".\"")))==>"Gagn&eacute;, Marcel"->"Carroll, John M."
Concat(ConstStr("\"Gagn&eacute;, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("arcel\"")))==>"Carroll, John M."->"Gagn&eacute;, Marcel"
Concat(ConstStr("\"Com and Corba: Architectures, Strategies, and Implementations"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"UNIX Network Programming, Volume 1: The Sockets Networking API, 3E"->"Com and Corba: Architectures, Strategies, and Implementations"
Concat(ConstStr("\"UNIX Network Programming, Volume 1: The Sockets Networking API, 3E"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Com and Corba: Architectures, Strategies, and Implementations"->"UNIX Network Programming, Volume 1: The Sockets Networking API, 3E"
Concat(ConstStr("\"Pritchard,"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Jason\"")))==>Stevens Richard et al->"Pritchard, Jason"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -5), RelativePosition(x, -4)))), ConstStr("tevens Richard et al"))==>"Pritchard, Jason"->Stevens Richard et al
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), Concat(ConstStr(" "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Colon◦WhiteSpace◦ALL CAPS", "ε"), 1))), ConstStr("irst Look at Microsoft SQL Server 2005 for Developers"))))==>"Art of Computer Programming, Volume 1: Fundamental Algorithms (3rd Edition)"->A First Look at Microsoft SQL Server 2005 for Developers
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1), RegexPositionRelative(x, RegexPair("Alphanumeric", "ε"), 1))), ConstStr("rt of Computer Programming, Volume 1: Fundamental Algorithms (3rd Edition)\"")))==>A First Look at Microsoft SQL Server 2005 for Developers->"Art of Computer Programming, Volume 1: Fundamental Algorithms (3rd Edition)"
Concat(ConstStr("Bob Beauchemin; Niels Berglund; "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), -1))), ConstStr("an Sullivan")))==>"Knuth, Donald E."->Bob Beauchemin; Niels Berglund; Dan Sullivan
Concat(ConstStr("\"Knuth, "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Semicolon◦WhiteSpace", "ε"), -1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦WhiteSpace"), -1))), ConstStr("onald E.\"")))==>Bob Beauchemin; Niels Berglund; Dan Sullivan->"Knuth, Donald E."
Concat(ConstStr("C++ "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word"), 1))), ConstStr("rimer")))==>A Practical Guide to Testing Object-Oriented Softw->C++ Primer
Concat(ConstStr("A "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), -1))), ConstStr("ractical Guide to Testing Object-Oriented Softw")))==>C++ Primer->A Practical Guide to Testing Object-Oriented Softw
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Forward Slash◦WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("ε", "Lowercase word◦Comma"), -1))), ConstStr("tanley B Lippman"))==>"McGregor, John D./ Sykes, David A."->Stanley B Lippman
Concat(ConstStr("\"McGregor, John D./ "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("ykes, David A.\"")))==>Stanley B Lippman->"McGregor, John D./ Sykes, David A."
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 2), RelativePosition(x, 3)))), ConstStr("dvances in Computers"))==>Swarm Intelligence->Advances in Computers
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, -2), RegexPositionRelative(x, RegexPair("ε", "Line Separator"), -1)))), ConstStr("warm Intelligence"))==>Advances in Computers->Swarm Intelligence
Concat(ConstStr("\"Zelkowitz, Marvin V. ("), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "ALL CAPS"), 1), RegexPositionRelative(x, RegexPair("ALL CAPS", "ε"), 1))), ConstStr("DT)\"")))==>"Eberhart,Russell"->"Zelkowitz, Marvin V. (EDT)"
Concat(ConstStr("\""), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Left Parenthesis", "ε"), 1), RegexPositionRelative(x, RegexPair("Left Parenthesis◦Upper Case", "ε"), 1))), ConstStr("berhart,Russell\"")))==>"Zelkowitz, Marvin V. (EDT)"->"Eberhart,Russell"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in ToUppercase(SubStr(x, PosPair(RelativePosition(x, 6), RelativePosition(x, 7)))), ConstStr("icrosoft Office Access 2003"))==>Programming the Web Using Xhtml and Javascript->Microsoft Office Access 2003
Concat(ConstStr("Programming the Web Using Xhtml and"), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "WhiteSpace"), 1), RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1))), ConstStr("Javascript")))==>Microsoft Office Access 2003->Programming the Web Using Xhtml and Javascript
Concat(ConstStr("\"Coulthard, Glen"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Lagerstrom, Larry Randles"->"Coulthard, Glen"
Concat(ConstStr("\"Lagerstrom, Larry Randles"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Coulthard, Glen"->"Lagerstrom, Larry Randles"
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Camel Case◦WhiteSpace◦Camel Case"), -1), RegexPositionRelative(x, RegexPair("ALL CAPS", "Lowercase word◦WhiteSpace◦ALL CAPS"), -1))), ConstStr("OMPUTER SYSTEMS PERFORMANCE EVALUATION AND PREDICTION"))==>Multithreading Applications in Win32: The Complete Guide to Threads->COMPUTER SYSTEMS PERFORMANCE EVALUATION AND PREDICTION
Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case", "ε"), 1), RegexPositionRelative(x, RegexPair("Upper Case◦Upper Case◦Upper Case", "ε"), 1))), ConstStr("ultithreading Applications in Win32: The Complete Guide to Threads"))==>COMPUTER SYSTEMS PERFORMANCE EVALUATION AND PREDICTION->Multithreading Applications in Win32: The Complete Guide to Threads
Concat(ConstStr("\"Fortier,Paul"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Beveridge, Jim, Wiener, Robert"->"Fortier,Paul"
Concat(ConstStr("\"Beveridge, Jim, Wiener, Robert"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Fortier,Paul"->"Beveridge, Jim, Wiener, Robert"
Concat(ConstStr("Accelerated "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Alphanumeric◦Plus"), 1), RegexPositionRelative(x, RegexPair("Plus", "ε"), -1))), ConstStr(" Practical Prog By Exampl")))==>Data Structures With C++ Using Stl->Accelerated C++ Practical Prog By Exampl
Concat(ConstStr("Data Structures With "), Concat(let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("WhiteSpace", "ε"), 1), RegexPositionRelative(x, RegexPair("Plus", "ε"), -1))), ConstStr(" Using Stl")))==>Accelerated C++ Practical Prog By Exampl->Data Structures With C++ Using Stl
Concat(ConstStr("\"Koenig, Andrew"), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Ford, William; Topp, William; Topp, William R."->"Koenig, Andrew"
Concat(ConstStr("\"Ford, William; Topp, William; Topp, William R."), let columnName = "0" in let x = ChooseInput(vs, columnName) in SubStr(x, PosPair(RegexPositionRelative(x, RegexPair("ε", "Double Quote"), 1), RegexPositionRelative(x, RegexPair("ε", "Alphanumeric"), 1))))==>"Koenig, Andrew"->"Ford, William; Topp, William; Topp, William R."
